// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.21.0
// 	protoc        v3.7.1
// source: frontPermit.proto

package frontPermit

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type FrontPermit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	App         string `protobuf:"bytes,2,opt,name=app,proto3" json:"app,omitempty"`
	Service     string `protobuf:"bytes,3,opt,name=service,proto3" json:"service,omitempty"`
	Method      string `protobuf:"bytes,4,opt,name=method,proto3" json:"method,omitempty"`
	Name        string `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	Description string `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
	CreatedAt   string `protobuf:"bytes,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt   string `protobuf:"bytes,8,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *FrontPermit) Reset() {
	*x = FrontPermit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frontPermit_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FrontPermit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrontPermit) ProtoMessage() {}

func (x *FrontPermit) ProtoReflect() protoreflect.Message {
	mi := &file_frontPermit_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrontPermit.ProtoReflect.Descriptor instead.
func (*FrontPermit) Descriptor() ([]byte, []int) {
	return file_frontPermit_proto_rawDescGZIP(), []int{0}
}

func (x *FrontPermit) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *FrontPermit) GetApp() string {
	if x != nil {
		return x.App
	}
	return ""
}

func (x *FrontPermit) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

func (x *FrontPermit) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *FrontPermit) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FrontPermit) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *FrontPermit) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *FrontPermit) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type ListQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit int64  `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Page  int64  `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	Sort  string `protobuf:"bytes,3,opt,name=sort,proto3" json:"sort,omitempty"`
	Where string `protobuf:"bytes,4,opt,name=where,proto3" json:"where,omitempty"`
}

func (x *ListQuery) Reset() {
	*x = ListQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frontPermit_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListQuery) ProtoMessage() {}

func (x *ListQuery) ProtoReflect() protoreflect.Message {
	mi := &file_frontPermit_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListQuery.ProtoReflect.Descriptor instead.
func (*ListQuery) Descriptor() ([]byte, []int) {
	return file_frontPermit_proto_rawDescGZIP(), []int{1}
}

func (x *ListQuery) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListQuery) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListQuery) GetSort() string {
	if x != nil {
		return x.Sort
	}
	return ""
}

func (x *ListQuery) GetWhere() string {
	if x != nil {
		return x.Where
	}
	return ""
}

type Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ListQuery   *ListQuery   `protobuf:"bytes,1,opt,name=list_query,json=listQuery,proto3" json:"list_query,omitempty"`
	FrontPermit *FrontPermit `protobuf:"bytes,2,opt,name=front_permit,json=frontPermit,proto3" json:"front_permit,omitempty"`
}

func (x *Request) Reset() {
	*x = Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frontPermit_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Request) ProtoMessage() {}

func (x *Request) ProtoReflect() protoreflect.Message {
	mi := &file_frontPermit_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Request.ProtoReflect.Descriptor instead.
func (*Request) Descriptor() ([]byte, []int) {
	return file_frontPermit_proto_rawDescGZIP(), []int{2}
}

func (x *Request) GetListQuery() *ListQuery {
	if x != nil {
		return x.ListQuery
	}
	return nil
}

func (x *Request) GetFrontPermit() *FrontPermit {
	if x != nil {
		return x.FrontPermit
	}
	return nil
}

type Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Valid        bool           `protobuf:"varint,1,opt,name=valid,proto3" json:"valid,omitempty"`
	Total        int64          `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	FrontPermit  *FrontPermit   `protobuf:"bytes,3,opt,name=front_permit,json=frontPermit,proto3" json:"front_permit,omitempty"`
	FrontPermits []*FrontPermit `protobuf:"bytes,4,rep,name=front_permits,json=frontPermits,proto3" json:"front_permits,omitempty"`
}

func (x *Response) Reset() {
	*x = Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frontPermit_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response) ProtoMessage() {}

func (x *Response) ProtoReflect() protoreflect.Message {
	mi := &file_frontPermit_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response.ProtoReflect.Descriptor instead.
func (*Response) Descriptor() ([]byte, []int) {
	return file_frontPermit_proto_rawDescGZIP(), []int{3}
}

func (x *Response) GetValid() bool {
	if x != nil {
		return x.Valid
	}
	return false
}

func (x *Response) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *Response) GetFrontPermit() *FrontPermit {
	if x != nil {
		return x.FrontPermit
	}
	return nil
}

func (x *Response) GetFrontPermits() []*FrontPermit {
	if x != nil {
		return x.FrontPermits
	}
	return nil
}

var File_frontPermit_proto protoreflect.FileDescriptor

var file_frontPermit_proto_rawDesc = []byte{
	0x0a, 0x11, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x74, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x74,
	0x22, 0xd5, 0x01, 0x0a, 0x0b, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x10, 0x0a, 0x03, 0x61, 0x70, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x61,
	0x70, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x65,
	0x74, 0x68, 0x6f, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x5f, 0x0a, 0x09, 0x4c, 0x69, 0x73, 0x74,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73,
	0x6f, 0x72, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x68, 0x65, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x77, 0x68, 0x65, 0x72, 0x65, 0x22, 0x7d, 0x0a, 0x07, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x35, 0x0a, 0x0a, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x71, 0x75, 0x65,
	0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x66, 0x72, 0x6f, 0x6e, 0x74,
	0x50, 0x65, 0x72, 0x6d, 0x69, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x52, 0x09, 0x6c, 0x69, 0x73, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x3b, 0x0a, 0x0c, 0x66,
	0x72, 0x6f, 0x6e, 0x74, 0x5f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x74, 0x2e,
	0x46, 0x72, 0x6f, 0x6e, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x74, 0x52, 0x0b, 0x66, 0x72, 0x6f,
	0x6e, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x74, 0x22, 0xb2, 0x01, 0x0a, 0x08, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x12, 0x3b, 0x0a, 0x0c, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x5f, 0x70, 0x65, 0x72, 0x6d, 0x69,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x50,
	0x65, 0x72, 0x6d, 0x69, 0x74, 0x2e, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69,
	0x74, 0x52, 0x0b, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x74, 0x12, 0x3d,
	0x0a, 0x0d, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x5f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x74, 0x73, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x50, 0x65, 0x72,
	0x6d, 0x69, 0x74, 0x2e, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x74, 0x52,
	0x0c, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x74, 0x73, 0x32, 0x9d, 0x03,
	0x0a, 0x0c, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x74, 0x73, 0x12, 0x34,
	0x0a, 0x03, 0x41, 0x6c, 0x6c, 0x12, 0x14, 0x2e, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x50, 0x65, 0x72,
	0x6d, 0x69, 0x74, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x66, 0x72,
	0x6f, 0x6e, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x35, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x2e, 0x66,
	0x72, 0x6f, 0x6e, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x74, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x15, 0x2e, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x74,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x34, 0x0a, 0x03, 0x47,
	0x65, 0x74, 0x12, 0x14, 0x2e, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x74,
	0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x66, 0x72, 0x6f, 0x6e, 0x74,
	0x50, 0x65, 0x72, 0x6d, 0x69, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x37, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x14, 0x2e, 0x66, 0x72,
	0x6f, 0x6e, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x74, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x15, 0x2e, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x74, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x37, 0x0a, 0x06, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x12, 0x14, 0x2e, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x50, 0x65, 0x72, 0x6d,
	0x69, 0x74, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x66, 0x72, 0x6f,
	0x6e, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x37, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x14, 0x2e,
	0x66, 0x72, 0x6f, 0x6e, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x74, 0x2e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69,
	0x74, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3f, 0x0a, 0x0e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x14,
	0x2e, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x74, 0x2e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x50, 0x65, 0x72, 0x6d,
	0x69, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_frontPermit_proto_rawDescOnce sync.Once
	file_frontPermit_proto_rawDescData = file_frontPermit_proto_rawDesc
)

func file_frontPermit_proto_rawDescGZIP() []byte {
	file_frontPermit_proto_rawDescOnce.Do(func() {
		file_frontPermit_proto_rawDescData = protoimpl.X.CompressGZIP(file_frontPermit_proto_rawDescData)
	})
	return file_frontPermit_proto_rawDescData
}

var file_frontPermit_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_frontPermit_proto_goTypes = []interface{}{
	(*FrontPermit)(nil), // 0: frontPermit.FrontPermit
	(*ListQuery)(nil),   // 1: frontPermit.ListQuery
	(*Request)(nil),     // 2: frontPermit.Request
	(*Response)(nil),    // 3: frontPermit.Response
}
var file_frontPermit_proto_depIdxs = []int32{
	1,  // 0: frontPermit.Request.list_query:type_name -> frontPermit.ListQuery
	0,  // 1: frontPermit.Request.front_permit:type_name -> frontPermit.FrontPermit
	0,  // 2: frontPermit.Response.front_permit:type_name -> frontPermit.FrontPermit
	0,  // 3: frontPermit.Response.front_permits:type_name -> frontPermit.FrontPermit
	2,  // 4: frontPermit.FrontPermits.All:input_type -> frontPermit.Request
	2,  // 5: frontPermit.FrontPermits.List:input_type -> frontPermit.Request
	2,  // 6: frontPermit.FrontPermits.Get:input_type -> frontPermit.Request
	2,  // 7: frontPermit.FrontPermits.Create:input_type -> frontPermit.Request
	2,  // 8: frontPermit.FrontPermits.Update:input_type -> frontPermit.Request
	2,  // 9: frontPermit.FrontPermits.Delete:input_type -> frontPermit.Request
	2,  // 10: frontPermit.FrontPermits.UpdateOrCreate:input_type -> frontPermit.Request
	3,  // 11: frontPermit.FrontPermits.All:output_type -> frontPermit.Response
	3,  // 12: frontPermit.FrontPermits.List:output_type -> frontPermit.Response
	3,  // 13: frontPermit.FrontPermits.Get:output_type -> frontPermit.Response
	3,  // 14: frontPermit.FrontPermits.Create:output_type -> frontPermit.Response
	3,  // 15: frontPermit.FrontPermits.Update:output_type -> frontPermit.Response
	3,  // 16: frontPermit.FrontPermits.Delete:output_type -> frontPermit.Response
	3,  // 17: frontPermit.FrontPermits.UpdateOrCreate:output_type -> frontPermit.Response
	11, // [11:18] is the sub-list for method output_type
	4,  // [4:11] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_frontPermit_proto_init() }
func file_frontPermit_proto_init() {
	if File_frontPermit_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_frontPermit_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FrontPermit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frontPermit_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frontPermit_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frontPermit_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_frontPermit_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_frontPermit_proto_goTypes,
		DependencyIndexes: file_frontPermit_proto_depIdxs,
		MessageInfos:      file_frontPermit_proto_msgTypes,
	}.Build()
	File_frontPermit_proto = out.File
	file_frontPermit_proto_rawDesc = nil
	file_frontPermit_proto_goTypes = nil
	file_frontPermit_proto_depIdxs = nil
}
